import{_ as i,c as a,a as t,o as s}from"./app-Boikxu3H.js";const r="/assets/9a7c89712dac1079e1c564f3954de86b-D96Qb7bz.png",l="/assets/7954d939c57472efc72b8b7e032b113f-BVyIdunL.png",n={};function d(p,e){return s(),a("div",null,[...e[0]||(e[0]=[t('<h3 id="压缩为-tar-gz" tabindex="-1"><a class="header-anchor" href="#压缩为-tar-gz"><span>压缩为 .tar.gz</span></a></h3><ul><li>-c：create 建立压缩档案的参数；</li><li>-x：解压缩压缩档案的参数；</li><li>-z ：是否需要用gzip压缩；</li><li>-v： 压缩的过程中显示档案；</li><li>-f：置顶文档名，在f后面立即接文件名，不能再加参数</li></ul><p>示例：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -czf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> FolderName.tar.gz</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> FolderName</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将当前目录下名为 <code>FolderName</code> 的目录打包为 <code>FolderName.tar.gz</code> 并保存到当前目录下。</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果参数不加 <code>-z</code> ，则扩展名通常使用 <code>.tar</code></p><hr><h3 id="tar解压缩" tabindex="-1"><a class="header-anchor" href="#tar解压缩"><span>tar解压缩</span></a></h3><p>参数和上面相比，除了 <code>-c</code> 换成 <code>-x</code> 外完全相同</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -xzf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> FolderName.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如将刚刚生成的文件解压</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>解压到指定文件夹</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tar</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -xzf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> FolderName.tar.gz</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>关于解压时的 <code>-z</code> 参数，相信很多人并不清楚有什么用，这里进行一下解释说明：</p><p>原则上表示是否启用gzip解压，也就是.tar后面到底有没有.gz，但是实测发现是否使用不影响结果（压缩时必须有）</p><p>但是由于大多时候我们使用.tar.gz，因此建议直接记忆打包和解包直接默认这样子指定成 <code>-czf</code> 和 <code>-xzf</code> 。</p><hr><p>参考资料：</p><p><a href="https://www.cnblogs.com/lovelylife/p/5361697.html" target="_blank" rel="noopener noreferrer">tar 打包压缩目录 - LovelyLife - 博客园</a></p><p><a href="https://www.cnblogs.com/kedarui/p/3525674.html" target="_blank" rel="noopener noreferrer">Tar打包、压缩与解压缩到指定目录的方法 - kedarui - 博客园</a></p>',23)])])}const h=i(n,[["render",d]]),o=JSON.parse('{"path":"/article/ihwfyn5v/","title":"Linux tar完成压缩和解压缩","lang":"zh-CN","frontmatter":{"title":"Linux tar完成压缩和解压缩","createTime":"2022/07/09 11:46:24","permalink":"/article/ihwfyn5v/","description":"压缩为 .tar.gz -c：create 建立压缩档案的参数； -x：解压缩压缩档案的参数； -z ：是否需要用gzip压缩； -v： 压缩的过程中显示档案； -f：置顶文档名，在f后面立即接文件名，不能再加参数 示例： 将当前目录下名为 FolderName 的目录打包为 FolderName.tar.gz 并保存到当前目录下。 如果参数不加 -z...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux tar完成压缩和解压缩\\",\\"image\\":[\\"https://yxzl.dev/images/9a7c89712dac1079e1c564f3954de86b.png\\",\\"https://yxzl.dev/images/7954d939c57472efc72b8b7e032b113f.png\\"],\\"dateModified\\":\\"2025-10-10T04:50:50.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://yxzl.dev/article/ihwfyn5v/"}],["meta",{"property":"og:site_name","content":"异想之旅のBlog"}],["meta",{"property":"og:title","content":"Linux tar完成压缩和解压缩"}],["meta",{"property":"og:description","content":"压缩为 .tar.gz -c：create 建立压缩档案的参数； -x：解压缩压缩档案的参数； -z ：是否需要用gzip压缩； -v： 压缩的过程中显示档案； -f：置顶文档名，在f后面立即接文件名，不能再加参数 示例： 将当前目录下名为 FolderName 的目录打包为 FolderName.tar.gz 并保存到当前目录下。 如果参数不加 -z..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yxzl.dev/images/9a7c89712dac1079e1c564f3954de86b.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-10T04:50:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-10T04:50:50.000Z"}]]},"git":{"createdTime":1758874804000,"updatedTime":1760071850000},"autoDesc":true,"filePathRelative":"tech/20220709114624.md","headers":[]}');export{h as comp,o as data};
